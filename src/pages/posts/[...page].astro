---
import BaseLayout from '../../layouts/BaseLayout.astro';
import PostPreview from '../../components/PostPreview.svelte';
export async function getStaticPaths({ paginate, rss }) {
  const posts = Astro.fetchContent('./*.md').sort(
    (a, b) => new Date(b.date) - new Date(a.date)
  );
  const isNotDev = process.env.NODE_ENV !== 'development';
  if (isNotDev) posts.filter((post) => post.draft);
  // Generate RSS feed
  rss({
    // The RSS Feed title, description, and custom metadata.
    title: "Pranav's Blog",
    description: 'Feed of all posts on https://obnerd.in/',
    customData: `<language>en-gb</language>`,
    items: posts.map((item) => ({
      title: item.title,
      description: item.summary,
      link: item.url,
      pubDate: item.date,
    })),
    dest: '/posts.xml',
  });
  // Return a paginated collection of paths for all posts
  return paginate(posts, { pageSize: 2 });
}
const { page } = Astro.props;
// console.log(page);
---

<BaseLayout
  title={page.currentPage > 1 ? `Posts - Page ${page.currentPage}` : 'Posts'}
>
  <h1 class="title">
    Posts {page.currentPage > 1 && `- Page ${page.currentPage}`}
  </h1>
  {page.data.map((post) => <PostPreview post={post} />)}
  <section class="pagination">
    <span>
      {page.url.prev && <a href={page.url.prev}>&lt; Prev</a>}
    </span>
    <span>{page.currentPage} / {page.lastPage}</span>
    <span>
      {page.url.next && <a href={page.url.next}>Next &gt;</a>}
    </span>
  </section>
</BaseLayout>
